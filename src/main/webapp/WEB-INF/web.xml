<?xml version="1.0" encoding="UTF-8"?>

<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>江苏省交通厅三级联网系统</display-name>

    <!-- param -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>epowerjtt</param-value>
    </context-param>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>

    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>

    <!-- /WEB-INF/action-servlet.xml,   -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:spring-hibernate.xml,
            classpath:sysconfig/spring-*.xml,
            classpath:appconfig/spring-*.xml,
            classpath:sampleflowconfig/spring-*.xml,
            classpath:powerruntimeconfig/spring-*.xml, 
            classpath:powerbaseconfig/spring-*.xml,   
            classpath:statconfig/spring-*.xml,
            classpath:spring-security-dao.xml,
            classpath:monitorconfig/spring-*.xml, 
            classpath:punishconfig/spring-*.xml,
            classpath:complaintconfig/spring-*.xml,
            classpath:superviseconfig/spring-*.xml,
            classpath:dispatchdocconfig/spring-*.xml,
            classpath:analysisconfig/spring-*.xml,
            classpath:poweritemconfig/spring-*.xml,
            classpath:quartz.xml
            classpath:indicatorconfig/spring-*.xml
            <!-- classpath:applicationContext-server.xml -->
        </param-value>
    </context-param>

    <context-param>
        <param-name>extremecomponentsPreferencesLocation</param-name>
        <param-value>/extremetable.properties</param-value>
    </context-param>

    <!-- spring 编码过滤器  解决中文乱码用-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            <!-- org.springframework.web.filter.CharacterEncodingFilter -->
            com.centit.sys.util.CharsetEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/j_spring_security_check</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

     <filter>
       <filter-name>ValidateCodeFilter</filter-name>
       <filter-class>com.centit.sys.security.ValidateCodeFilter</filter-class>
    </filter>
    <filter-mapping>
       <filter-name>ValidateCodeFilter</filter-name>
       <url-pattern>/j_spring_security_check</url-pattern>
    </filter-mapping>
    <!-- 过滤特殊字符（必须放在编码过滤器之后，否则中文乱码） -->
    <!-- <filter>
        <filter-name>htmlFilter</filter-name>
        <filter-class>
            com.centit.sys.util.HtmlSpecialCharsFilter
        </filter-class>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>htmlFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>htmlFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>htmlFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>htmlFilter</filter-name>
        <url-pattern>/j_spring_security_check</url-pattern>
    </filter-mapping> -->

    <!-- spring Security 认证与权限管理-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/j_spring_security_check</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/j_spring_security_logout</url-pattern>
    </filter-mapping>
    <!--
      <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/j_spring_cas_security_check</url-pattern>
    </filter-mapping>
    -->
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>

     <!--
     <filter-mapping>
         <filter-name>springSecurityFilterChain</filter-name>
         <url-pattern>/*</url-pattern>
     </filter-mapping>

     <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
	-->
 <!-- Spring Open Session In View Pattern filter
     这个过滤器可以将访问数据库退出到Jsp中对属性的调用，主要起的作用是 按需访问数据库
     -->
    <filter>
        <filter-name>SOSIVPFilter</filter-name>
        <filter-class>
            org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
        </filter-class>
        <init-param>
            <param-name>singleSession</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>flushMode</param-name>
            <param-value>AUTO</param-value>
        </init-param>

    </filter>

    <filter-mapping>
        <filter-name>SOSIVPFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SOSIVPFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>


    
    <!-- ec table 的导出工具  -->
    <filter>
        <filter-name>eXtremeExport</filter-name>
        <filter-class>
            org.extremecomponents.table.filter.ExportFilter
        </filter-class>
        <init-param>
            <param-name>responseHeadersSetBeforeDoFilter</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    
    
    <filter-mapping>
        <filter-name>eXtremeExport</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    
   <!--sitemesh3需要在struts2的prepare和execute两个filter之间-->
  <filter>
        <filter-name>struts2-prepare</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
        <!--这个参数指定Struts2从什么地方查找注解，使用注解的方式是才需要配置-->
        <!-- 
        <init-param>
            <param-name>actionPackages</param-name>
            <param-value>com.centit.sys.web,com.centit.app.web</param-value>
        </init-param>
         -->
         <init-param>
            <param-name>config</param-name>     
            <param-value>struts-default.xml,struts-plugin.xml,struts-config.xml</param-value>
        </init-param>
         
    </filter>
    <filter-mapping>
        <filter-name>struts2-prepare</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>    
    <filter-mapping>
        <filter-name>struts2-prepare</filter-name>
        <url-pattern>/page/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>struts2-prepare</filter-name>
        <url-pattern>/struts/*</url-pattern>
    </filter-mapping>        
     
    <!-- sitemesh
  	<filter>
	  <filter-name>sitemesh</filter-name>
	  <filter-class>
	      com.opensymphony.sitemesh.webapp.SiteMeshFilter
	  </filter-class>
	
	</filter>
    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping> 
    -->
    <filter>
        <filter-name>struts2-execute</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
    </filter>

	<filter-mapping>
        <filter-name>struts2-execute</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>  
    <filter-mapping>
        <filter-name>struts2-execute</filter-name>
        <url-pattern>/page/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>struts2-execute</filter-name>
        <url-pattern>/struts/*</url-pattern>
    </filter-mapping>

    <!--传输文件压缩过滤器  -->
    <!--<filter>-->
        <!--<filter-name>compressionFilter</filter-name>-->
        <!--<filter-class>-->
            <!--com.centit.core.web.filter.GZIPFilter-->
        <!--</filter-class>-->
    <!--</filter>-->

    <!--<filter-mapping>-->
        <!--<filter-name>compressionFilter</filter-name>-->
        <!--<url-pattern>*.css</url-pattern>-->
    <!--</filter-mapping>-->
    <!--<filter-mapping>-->
        <!--<filter-name>compressionFilter</filter-name>-->
        <!--<url-pattern>*.jsp</url-pattern>-->
    <!--</filter-mapping>-->
    <!--<filter-mapping>-->
        <!--<filter-name>compressionFilter</filter-name>-->
        <!--<url-pattern>*.js</url-pattern>-->
    <!--</filter-mapping>-->

   
    <!-- CAS统一登出过滤器 -->
    <!-- 
    <filter>
        <filter-name>CASSingleSignOutFilter</filter-name>
        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
    </filter>
   
    <filter-mapping>
        <filter-name>CASSingleSignOutFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
     -->
    <!--  缓存过滤器 好像有点问题，不能打开-->
    <!--
         <filter>
         <filter-name>cacheFilter</filter-name>
         <filter-class>com.centit.core.web.filter.CacheFilter</filter-class>
         </filter>

         <filter-mapping>
         <filter-name>cacheFilter</filter-name>
         <url-pattern>*.css</url-pattern>
         </filter-mapping>
         <filter-mapping>
         <filter-name>cacheFilter</filter-name>
         <url-pattern>*.gif</url-pattern>
         </filter-mapping>
         <filter-mapping>
         <filter-name>cacheFilter</filter-name>
         <url-pattern>*.js</url-pattern>
         </filter-mapping>
     -->

    <!-- Listeners -->
	<listener>
      	<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
 	</listener>

    <listener>
        <listener-class>
            org.springframework.web.util.Log4jConfigListener
        </listener-class>
    </listener>

    <!--  This listener is deployed in conjunction with the Spring plugin to enable the spring object
                factory and the autowiring interceptors.  This only necessary starting with the Chapter Nine
                version of the application, where Spring IoC is introduced.
    -->
    <!-- com.centit.sys.web.StartupListener EXTENDS org.springframework.web.context.ContextLoaderListener -->
    <listener>
        <listener-class>
            com.centit.core.web.StartupListener
        </listener-class>
    </listener>
     <jsp-config>
        <taglib>
            <taglib-location>/WEB-INF/coderepo.tld</taglib-location>
            <taglib-uri>http://www.centit.com/el/coderepo</taglib-uri>
        </taglib>
    </jsp-config>
  <!--   <listener>
        <listener-class>
            com.centit.sys.util.DBChangeListener
        </listener-class>
    </listener> -->
    
     <servlet>
    	<description>
    	</description>
    	<display-name>OfficeServer</display-name>
    	<servlet-name>OfficeServer</servlet-name>
    	<servlet-class>com.goldgrid.weboffice.OfficeServer</servlet-class>
    </servlet>
    <!-- webservice add begin -->
      <servlet>
     	<display-name>Apache-Axis Servlet</display-name>
     	<servlet-name>AxisServlet</servlet-name>
     	<servlet-class>org.apache.axis.transport.http.AxisServlet</servlet-class>
     </servlet>
     <servlet>
     	<display-name>Axis Admin Servlet</display-name>
     	<servlet-name>AdminServlet</servlet-name>
     	<servlet-class>org.apache.axis.transport.http.AdminServlet</servlet-class>
     	<load-on-startup>100</load-on-startup>
     </servlet>
     <!-- webservice add end -->
    <servlet-mapping>
    	<servlet-name>OfficeServer</servlet-name>
    	<url-pattern>/OfficeServer</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>AxisServlet</servlet-name>
    	<url-pattern>/servlet/AxisServlet</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>AxisServlet</servlet-name>
    	<url-pattern>*.jws</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>AxisServlet</servlet-name>
    	<url-pattern>/services/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>AdminServlet</servlet-name>
    	<url-pattern>/servlet/AdminServlet</url-pattern>
    </servlet-mapping>
    
    <!-- <servlet>  
        <description>Apache CXF Endpoint</description>  
        <display-name>cxf</display-name>  
        <servlet-name>cxf</servlet-name>  
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>  
        <load-on-startup>1</load-on-startup>
    </servlet> 
    <servlet-mapping>  
        <servlet-name>cxf</servlet-name>  
        <url-pattern>/webService/*</url-pattern>  
    </servlet-mapping>  -->
    <!-- CAS统一登出监听器 -->
    <!--  
     <listener>
         <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
     </listener>
    --> 

    <!-- other -->
    <session-config>
        <session-timeout>120</session-timeout>
    </session-config>

    <welcome-file-list>
        <welcome-file>page/frame/login.jsp</welcome-file>
    </welcome-file-list>

</web-app>
