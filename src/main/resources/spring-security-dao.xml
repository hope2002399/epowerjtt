<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	    http://www.springframework.org/schema/security
	    http://www.springframework.org/schema/security/spring-security-3.0.xsd"
	default-lazy-init="true">

	<security:http auto-config="true" access-denied-page="/page/frame/login.jsp">

		<security:anonymous granted-authority="R_G-anonymous" username="noname"  />
		<security:intercept-url pattern="/sys/mainFrame!login.do" filters="none" />
		<security:intercept-url pattern="/sys/userDef!register.do" filters="none" />
		<!--  -->
		<security:form-login login-page="/page/frame/login.jsp"
			authentication-failure-url="/sys/mainFrame!loginError.do"
			default-target-url="/sys/mainFrame!loginSuccess.do" />
		<security:logout logout-success-url="/page/frame/login.jsp" />
		
		<security:http-basic />
        <!-- 增加一个filter，这点与Acegi是不一样的，不能修改默认的filter了，这个filter位于FILTER_SECURITY_INTERCEPTOR之前 -->
		<security:custom-filter before="FILTER_SECURITY_INTERCEPTOR"
             ref="centitPowerFilter" />
             
      		
	</security:http>
	
 	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性，
     我们的所有控制将在这三个类中实现，解释详见具体配置 -->
    <bean id="centitPowerFilter" class="com.centit.sys.security.DaoFilterSecurityInterceptor">
        <property name="authenticationManager"
             ref="authenticationManager" />
        <property name="accessDecisionManager"
             ref="centitAccessDecisionManagerBean" />
        <property name="securityMetadataSource"
             ref="centitSecurityMetadataSource" />
    </bean>
   
    <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
    <bean id="centitAccessDecisionManagerBean"
         class="com.centit.sys.security.DaoAccessDecisionManager">
    </bean>
    
    <!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
    <bean id="centitSecurityMetadataSource"
         class="com.centit.sys.security.DaoInvocationSecurityMetadataSource" >
         <property name="functionDao" ref="functionDao"/>
         <property name="optRunRecDao" ref="optRunRecDao"/>
    </bean>
     <!--
    <bean id="validateCodeAuthenticationFilter"  
    	class="com.centit.sys.security.CodeAuthenticationProcessingFilter" >
    	</bean>
	l--> 
	<!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider user-service-ref="sysUserManager">  
			 <security:password-encoder ref="passwordEncoder">
			 	<security:salt-source user-property="usercode"  />
			 </security:password-encoder>
		 </security:authentication-provider> 
	 </security:authentication-manager>
	 
</beans>
